pipeline {
    agent any

    stages {
        stage('Run Unit Tests') {
            steps {
                sh """
                    docker run --rm --memory=2g \\
                      -v \${WORKSPACE}:/app \\
                      -w /app \\
                      python:3.12 \\
                      sh -c "
                        apt-get update && \\
                        apt-get install -y \\
                          git \\
                          libgl1-mesa-glx \\
                          libxkbcommon0 \\
                          libegl1-mesa \\
                          libdbus-1-3 \\
                          xvfb && \\
                        pip install --upgrade pip && \\
                        git clone https://github.com/dawidziel/szaszki-chess.git && \\
                        cd szaszki-chess && \\
                        pip install pytest pytest-cov pytest-qt && \\
                        pip install -r requirements.txt && \\
                        export DISPLAY=:99 && \\
                        export QT_QPA_PLATFORM=offscreen && \\
                        Xvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset & \\
                        sleep 3 && \\
                        python -m pytest -v --junitxml=test-results.xml --cov=.
                      "
                """
            }
        }
    }

    post {
        always {
            junit allowEmptyResults: true, testResults: '**/test-results.xml'
            archiveArtifacts artifacts: '**/test-results.xml', allowEmptyArchive: true
        }
    }
}