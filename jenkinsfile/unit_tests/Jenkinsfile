pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/dawidziel/szaszki-chess.git', branch: 'main'
            }
        }

        stage('Run Unit Tests') {
            steps {
                sh """
                    docker run --rm --memory=2g \\
                      -v \${WORKSPACE}/szaszki-chess:/app \\
                      -w /app \\
                      python:3.12 \\
                      sh -c "
                        apt-get update && apt-get install -y git &&
                        pip install --upgrade pip &&
                        cd /app &&
                        ls -la &&
                        cp -r /app/* /tmp/ &&
                        cd /tmp &&
                        pwd &&
                        ls -la &&
                        pip freeze > requirements.txt &&
                        pip install -r requirements.txt &&
                        pip install pytest pytest-cov &&
                        python -m pytest -v \\
                        --junitxml=/tmp/test-results.xml \\
                        --cov=. \\
                        || (echo 'Tests failed' && exit 1)
                      "
                """
            }
        }
    }

    post {
        always {
            junit allowEmptyResults: true, testResults: '**/test-results.xml'

            archiveArtifacts artifacts: '**/requirements.txt,**/test-results.xml', allowEmptyArchive: true
        }

        failure {
            echo 'Unit tests failed. Please check the test results.'
        }
    }
}